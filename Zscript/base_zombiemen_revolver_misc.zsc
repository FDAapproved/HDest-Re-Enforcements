extend class HDRERevolver
{
	virtual bool A_HDWRevolverIsUnloaded()
	{
		return __unloaded; 
	}

	// Whether or not the revolver is fully loaded. 
	virtual bool A_HDWRevolverIsNotFullyLoaded()
	{
		bool result = true;
		for(int i = 0; i < REV_SIZE; i++)
		{
			result && __cylinder[i];
			
			if(!result)
				return true;
		}
		
		return false;
	}

	virtual bool A_HDWRevolverIsCocked()
	{
		return __cocked;
	}

	
	virtual int A_HDWRevolverNextShotExists()
	{	
		int result = 0;
		// Returns the next round to be fire'd status.
		if(__cylinder[5] == REV_9MM || __cylinder[5] == REV_355)
			result = 1;
		return result;
	}
	
	// Code more or less taken wholesale from HD proper. 
	virtual void A_HDWRevolverCycle(bool clockwise=true, bool playsound=true)
	{
		
		// Plays the revolver spin. 
		if(playsound)A_StartSound("weapons/deinocyl",8);

		int cycleback = __cylinder[0];
		
		if(clockwise)
		{
			__cylinder[0] = __cylinder[5];
			__cylinder[5] = __cylinder[4];
			__cylinder[4] = __cylinder[3];
			__cylinder[3] = __cylinder[2];
			__cylinder[2] = __cylinder[1];
			__cylinder[1] = cycleback;
		}else
		{
			__cylinder[0] = __cylinder[1];
			__cylinder[1] = __cylinder[2];
			__cylinder[2] = __cylinder[3];
			__cylinder[3] = __cylinder[4];
			__cylinder[4] = __cylinder[5];
			__cylinder[5] = cycleback;
		}
	}
}